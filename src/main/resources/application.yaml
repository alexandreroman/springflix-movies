spring:
  application:
    name: springflix-movies
  cache:
    type: redis
  data:
    redis:
      # Workaround for https://github.com/spring-cloud/spring-cloud-bindings/issues/87:
      host: ${spring.redis.host}
      password: ${spring.redis.password}

app:
  client:
    connectTimeout: 30s
    readTimeout: 30s
  cache:
    ttl: 10m
  tmdb:
    api:
      url: https://api.themoviedb.org
      key:

server:
  port: ${PORT:8081}

springdoc:
  api-docs:
    path: /api/openapi

management:
  observations:
    key-values: &tags
      application: springflix
      service: ${spring.application.name}
      source: ${spring.application.name}-${random.uuid}
  metrics:
    tags: *tags
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 0.1
  otlp:
    metrics:
      export:
        step: 30s
        url: http://localhost:4318/v1/metrics
    tracing:
      endpoint: http://localhost:4318/v1/traces
  endpoints:
    web:
      exposure:
        include: health, info
  endpoint:
    health:
      probes:
        enabled: true
      group:
        readiness:
          include:
          - readinessState
          - redis

logging:
  level:
    io:
      micrometer:
        registry:
          otlp: off
      opentelemetry:
        exporter:
          internal:
            http: off
